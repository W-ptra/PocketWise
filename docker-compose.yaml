version: '3.8'

services:
  backend:
    build:
      context: ./backend
      dockerfile: dockerfile
    container_name: backend-capstone
    depends_on:
      - postgres
      - redis
    environment:
      FRONTEND_HOST: "https://pocketwise.wisnup.tech"
      BACKEND_HOST: "https://pocketwise.wisnup.tech"
      ML_HOST: "http://ml:80"
      PORT: 80
      CORS: "*"
      POSTGRES_URL: "postgresql://root:root@postgres:5432/capstone?schema=public"
      REDIS_URL: "redis://redis:6379"
      JWT_SECRET: "secret"
      JWT_EXPIRED_TIME: "10h"
      NEBIUS_QWEN_API_KEY: x
      NEBIUS_DEEPSEEK_API_KEY: x
      RESEND_API_KEY: x
      GOOGLE_OAUTH_CLIENT_ID: x
      GOOGLE_OAUTH_CLIENT_SECRET: x
      MICROSOFT_AZURE_BLOB_SAS: x
    ports:
      - "3000:80"
    networks:
      - capstone_network

  frontend:
    build:
      context: ./frontend
      dockerfile: dockerfile
    container_name: frontend-capstone
    environment:
      VITE_APP_API_URL: "https://pocketwise.wisnup.tech"
      VITE_APP_HOST: "0.0.0.0"
      VITE_APP_PORT: "80"
      VITE_APP_GOOGLE_OAUTH_CLIENT_ID: x
    depends_on:
      - backend
    ports:
      - "4000:80"
    networks:
      - capstone_network

  postgres:
    image: postgres:15
    container_name: postgres-capstone
    restart: always
    environment:
      POSTGRES_USER: root
      POSTGRES_PASSWORD: root
      POSTGRES_DB: capstone
    ports:
      - "5432:5432"
    networks:
      - capstone_network

  redis:
    image: redis:7-alpine
    container_name: redis-capstone
    restart: always
    ports:
      - "6379:6379"
    networks:
      - capstone_network

  ml:
    # warning! build can take longer time, as it required bigger library ex: tensor flow to be download
    # and the container size can exceed 2GB+
    build:
      context: ./ML
      dockerfile: dockerfile

    # instead can pull and use image that has been build by author
    # image: wisnup001binus/ml_capstone:1.0

    container_name: ml-capstone
    environment:
      HOST: "0.0.0.0"
      PORT: 80
    ports:
      - "3005:80"
    networks:
      - capstone_network

  nginx:
    container_name: nginx
    build:
      context: ./nginx router
      dockerfile: dockerfile 
    depends_on:
      - frontend
      - backend
    ports:
      - "1000:80"
    networks:
      - capstone_network
    
  # cloudflared:
  #   image: cloudflare/cloudflared:latest
  #   command: tunnel --no-autoupdate run --token x
  #   restart: unless-stopped
  #   depends_on:
  #     - nginx
  #   networks:
  #     - capstone_network

networks:
  capstone_network:
    driver: bridge
